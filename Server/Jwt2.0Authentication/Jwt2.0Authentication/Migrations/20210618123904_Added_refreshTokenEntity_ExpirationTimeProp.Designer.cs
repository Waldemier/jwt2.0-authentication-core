// <auto-generated />
using System;
using Jwt2._0Authentication.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Jwt2._0Authentication.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210618123904_Added_refreshTokenEntity_ExpirationTimeProp")]
    partial class Added_refreshTokenEntity_ExpirationTimeProp
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Jwt2._0Authentication.Data.Entities.Other.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<TimeSpan>("ExpiryTime")
                        .HasColumnType("time");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("Jwt2._0Authentication.Data.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@gmail.com",
                            Name = "Admin",
                            Password = "$2a$11$aRP0Iatsc2ADBEO8Fn4yM.txgtiwsMfJR8C/VfNZj2KcsbYEntSTu",
                            Role = 0
                        },
                        new
                        {
                            Id = 2,
                            Email = "test1@gmail.com",
                            Name = "Dominik",
                            Password = "$2a$11$DYbYw2x0/TU9iZQiCnHTeuvPvg1yXMHbDbeW0mnFjZYP0wkLjFN.6",
                            Role = 1
                        },
                        new
                        {
                            Id = 3,
                            Email = "test2@gmail.com",
                            Name = "Vladislav",
                            Password = "$2a$11$CnnEoiLCErWTDSql0WtI.u8Z4hk9mERScVyBK5C8hY72XgT8r3ITu",
                            Role = 2
                        });
                });

            modelBuilder.Entity("Jwt2._0Authentication.Data.Entities.Other.RefreshToken", b =>
                {
                    b.HasOne("Jwt2._0Authentication.Data.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
